.hexagon3__wrapper {
	display: flex;
	flex-wrap: wrap;
	--wrapper-width: 30%;
	width: var(--wrapper-width);/* 全体の大きさを変更できる */
	margin-right: calc(-1 * var(--wrapper-width) / 3 * 0.25 * 2 - var(--wrapper-width) / 3 * 0.05 * 2);
	margin-bottom: 20%;
}
@media(max-width: 768px) {
	.hexagon3__wrapper {
		--wrapper-width: 100%;
		font-size: 3vw;
	}
}
.hexagons {
	width: calc(100% /3);
}
.honeycomb-area {
	display: flex;
	justify-content: center;
}
.hexagon-3_hexagon {
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	aspect-ratio: 200 / 173;/* 正六角形になる比率 */
	background-color: #333;
	clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}
.inhex:hover{
    background-color: #a783cf;
}
.inhex:hover{
    background-color: #63319c;
}
.hexagon-3_hexagon>span {
	display: flex;
	justify-content: center;
	align-items: center;
	width: 90%;
	height: 90%;
	background-color: #fff;
	clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}
/* 2行目と3行目の六角形を上にずらして縁を重ねる */
.hexagon-3_hexagon:nth-of-type(2),
.hexagon-3_hexagon:nth-of-type(3) {
	margin-top: -5%;
}
/* 中央の列を下にずらす */
.honeycomb-area .hexagons-center {
	transform: translateY(calc(100% / 6));
}
/* 2列目と3列目の六角形を左にずらして縁を重ねる */
.honeycomb-area .hexagons-center,
.honeycomb-area .hexagons-right {
	margin-left: calc(-100% / 3 * 0.25 - 100% / 3 * 0.05);
}

.menubutton {
    position: fixed;
    top: 0;
    left: 0;
    width: 40px;
    height: 40px;
    background: black;
    cursor: pointer;
    z-index: 999;
    }
    .menubutton i {
    display: block;
    position: absolute;
    left: 50%;
    transform: translate(-50%,-50%);
    width: 30px;
    height: 5px;
    background: white;
    transition: all .5s
    }
    .menubutton i:first-child {
    top: 10px;
    }
    .menubutton i:nth-child(2) {
    top: 50%;
    }
    .menubutton i:last-child {
    top: 30px;
    }
    .menubutton.open i:first-child {
    top: 50%;
    transform: translate(-50%,-50%) rotate(45deg);
    }
    .menubutton.open i:nth-child(2) {
    opacity: 0;
    }
    .menubutton.open i:last-child {
    top: 50%;
    transform: translate(-50%,-50%) rotate(-45deg);
    }
    /* メニュー */
.menu {
    position: fixed;
    z-index: 998;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100vh;
    transition: all .5s;
    }
    .menu.open {
    left: 0;
    }
    .menu ul {
    margin: 40px 0 0 0;
    padding: 0;
    list-style: none;
    }
    .menu li {
    padding: 5px 0;
    text-align: center;
    background: black;
    color: white;
    transition: all .5s;
    }
    .menu li:hover {
    background: white;
    color: black;
    }
    a {
        font-weight:bold;
        text-decoration:none;
        }
    a:link { /*アクセスしたことのないリンク*/
        color:#88d820;
    }
    a:visited { /*アクセスしたことのあるリンク*/
            color:#88d820;
    }
    a:hover {/*マウスが上に乗っている状態*/
        color:#88d820;
    }

    
    /* 数字がカウントアップされるローディング画面 */
#loading {
	color: white;
	width: 100%;
	height: 100vh;
	background:#323232;
	text-align:center;
	z-index: 999;
	position: fixed;
    top: 0; 
    left: 0;
}

#loading_text {
	color: white;
	width: 100%;
	top: 50%;
	left: 50%;
	z-index: 999;
	position: absolute;
	transform: translate(-50%, -50%);
}

.boxes{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: 20px;
    row-gap: 80px;
    margin-top: 100px;
  }
  .box {
    aspect-ratio: 16 / 9;
    width: 45vw;

    background-color:transparent;

    opacity: 0;
    visibility: hidden;
    transition: all 1s;
    transform: translateY(150px);
  }
  .is-active {
    /*要素を表示させる*/
    opacity: 1;
    visibility: visible;
    /*元の位置に戻す*/
    transform: translateY(0);
  }

body {
   background: -webkit-linear-gradient(top, #ffffff 0%,#999999 100%);

    transition: background-color 0.5s ease-in-out; /* body自体の背景色遷移（必要であれば） */
}

  body::before {/*擬似要素をつくる*/
    position: fixed;/*固定配置*/
    top: 0; left: 0;/*左上に固定*/
    width: 100%;
    height: 100%;/*画面全体を覆う*/
    content: "";
    background: #f89174;/*保険用*/
    background: -moz-linear-gradient(top, #ffffff 0%,#999999 100%);
    background: -webkit-linear-gradient(top, #ffffff 0%,#999999 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fbcacb', endColorstr='#f79697',GradientType=0 );
    background: linear-gradient(top, #ffffff 0%,#999999 100%);
    z-index: -1;
  }

body:after { /* 擬似要素をつくる */
    position: fixed; /* 固定配置 */
    top: 0;
    left: 0; /* 左上に固定 */
    width: 100%;
    height: 100%; /* 画面全体を覆う */
    content: "";
   background: -webkit-linear-gradient(top, #ffffff 0%,#999999 100%);
    /* radial-gradient を使用し、カスタムプロパティで色とサイズを制御 */
    background: radial-gradient(
        circle at center, /* 中心から円形に広がる */
        var(--after-bg-start-color) 0%,
        var(--after-bg-end-color) 70% /* 70%あたりで色が完全に変わるように調整 */
    );
    /* 背景サイズをカスタムプロパティで指定し、アニメーション対象にする */
    background-size: var(--after-bg-size);
    background-repeat: no-repeat;
    background-position: center center; /* 背景の基準点を中央に */

    z-index: -1;
    /* transition を background-size に適用してアニメーションさせる */
    transition: background-size 0.8s ease-out, background-color 0.8s ease-out; /* background-colorはフォールバック用 */
}

/* 観覧車 */
  .object1{ 
    width: 30%;
  }
  .circle { 
    top: 30%;
    left: 10%;
    width: 25%; /* 親要素の 30% の幅 */
    padding-top: 25%; /* width と同じ値 */
    border: 1px solid #333;
    border-radius: 50%;
    position: fixed;
  }
  
  .content {
    width: 50%; 
    height: 50%;
    position: absolute;
    left: 25%;
    top: 25%;
    border: 1px solid #333;
  }
  
  /* top */
  .top { 
    animation: rotate_top 60s linear infinite;
  }
  @keyframes rotate_top { 
    0% { 
     transform: rotate(0deg) translateY(-100%) rotate(0deg);
    }
    100% {  
      transform: rotate(360deg) translateY(-100%) rotate(-360deg);
    }
  }
  
  /* right */
  .right { 
    animation: rotate_right 60s linear infinite;
  }
  @keyframes rotate_right { 
    0% { 
     transform: rotate(0deg) translateX(100%) rotate(0deg);
    }
    100% {  
      transform: rotate(360deg) translateX(100%) rotate(-360deg);
    }
  }
  
  /* bottom */
  .bottom { 
    animation: rotate_bottom 60s linear infinite;
  }
  @keyframes rotate_bottom { 
    0% { 
     transform: rotate(0deg) translateY(100%) rotate(0deg);
    }
    100% {  
      transform: rotate(360deg) translateY(100%) rotate(-360deg);
    }
  }
  
  /* left */
  .left { 
    animation: rotate_left 60s linear infinite;
  }
  @keyframes rotate_left { 
    0% { 
     transform: rotate(0deg) translateX(-100%) rotate(0deg);
    }
    100% {  
      transform: rotate(360deg) translateX(-100%) rotate(-360deg);
    }
  }
/* タイピング */
  .object2{
    margin-left: 55%;
  }
  
  /* 点滅 */
.blinking{
	-webkit-animation:blink 0.35s ease-in-out infinite alternate;
    -moz-animation:blink 0.35s ease-in-out infinite alternate;
    animation:blink 0.35s ease-in-out infinite alternate;
}
@-webkit-keyframes blink{
    0% {opacity:0;}
    100% {opacity:1;}
}
@-moz-keyframes blink{
    0% {opacity:0;}
    100% {opacity:1;}
}
@keyframes blink{
    0% {opacity:0;}
    100% {opacity:1;}
}


/* 読んだ割合 */
.object3{
  z-index: 1000;
}

.progress-circle {
  position: fixed;
  top: 30px;
  left: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 10vw; /* Changed to viewport width unit */
  height: 10vw; /* Changed to viewport width unit */
  background-image: conic-gradient(rgb(0, 247, 255) 0% 0%, #d9d9d9 0% 100%);
  border-radius: 50%;
  margin: 0 auto;
  min-width: 80px; /* Added max-width to prevent it from getting too big */
  min-height: 80px; /* Added max-height to prevent it from getting too big */
}

.progress-circle-inner {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 80%;
  height: 80%;
  font-size: clamp(16px,2vw,20px); /* Changed to viewport width unit */
  font-weight: 700;
  background: #fff;
  border-radius: 50%;
}

.dejirogo{
  margin-left: auto;
  margin-right: auto;
  font-size: 80px;
}
/* 準備中 */
.object4{visibility: hidden;}


.update{visibility: hidden;}
/* 更新中画面 */
/*.update{
  width: 100%;
  height: 100%;
  z-index: 100;
  position: fixed;
  background-color: #fff;
  visibility: visible;
}
.update_now{
  margin-left: auto;
  margin-right: auto;
}
html,body {overflow: hidden;}
.object1{display: none;}
.object2{display: none;}
.object3{display: none;}
.object4{display: none;}
.menubutton{display: none;}

/* 更新中画面ここまで */


@media (max-width: 1023px){
  .object2{
    visibility: hidden;
  }
  .object1{
    visibility: hidden;
  }

  body:after {/*擬似要素をつくる*/
    position: fixed;/*固定配置*/
    top: 0; left: 0;/*左上に固定*/
    width: 100%;
    height: 100%;/*画面全体を覆う*/
    content: "";
    background: #f89174;/*保険用*/
    background: -moz-linear-gradient(top, #ffffff 0%,#000000 100%);
    background: -webkit-linear-gradient(top, #ffffff 0%,#000000 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fbcacb', endColorstr='#f79697',GradientType=0 );
    background: linear-gradient(top, #ffffff 0%,#000000 100%);
    z-index: -2;
  }


  .object4{visibility: visible;}

  .dejiken {
    z-index: -1;
    position: fixed;
    top: 10%;
    left: 35%;
    font-size: 20vw;
    animation: zoomIn 0.8s cubic-bezier(0.25, 1, 0.5, 1) forwards;
    color: rgba(0, 126, 165, 0.678);
  }
}


/* style.css */

.object6 {
    margin: 0;
    font-family: 'Arial', sans-serif;
    overflow-x: hidden; /* 横スクロールバーを非表示にする */
    z-index: 98;
}
.about_title{
  color: #000;
  font-size: 30px;
}

.text_box{
  opacity: 1;
  color: #000;
  background-color:transparent;
}

img{
  opacity: 1;
  width: 100%;
}

.intro-section {
    position: relative;
    height: 100vh; /* 画面いっぱいの高さ */
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
}

.vanish-box-container {
    position: fixed; /* 箱を画面に固定 */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-wrap: wrap; /* 箱を折り返して配置 */
    z-index: 100; /* コンテンツの上に表示 */
}

.vanish-box {
    width: 33.33%; /* 3列に配置 */
    height: 50%; /* 2行に配置 */
    background-color: #3498db; /* 箱の色 */
    border: 1px solid rgba(0, 0, 0, 0.1); /* 箱の境界線 */
    box-sizing: border-box; /* paddingとborderをwidth/heightに含める */
    transition: transform 0.8s ease-out; /* アニメーションの速度と滑らかさ */
}

/* 各段階での箱の移動 */
/* Stage 1: 中央から外へ */
.vanish-box.stage-1-left {
    transform: translateX(-100%);
}
.vanish-box.stage-1-right {
    transform: translateX(100%);
}

/* Stage 2: さらに外へ */
.vanish-box.stage-2-left {
    transform: translateX(-200%);
}
.vanish-box.stage-2-right {
    transform: translateX(200%);
}

/* Stage 3: 完全に消える */
.vanish-box.stage-3-left {
    transform: translateX(-300%);
}
.vanish-box.stage-3-right {
    transform: translateX(300%);
}

/* 箱の色を段階的に変えるなど、バリエーションを加えることも可能 */
.box-1, .box-6 { background-color: #99fcff; } /* 赤 */
.box-2, .box-5 { background-color: #afd5f8; } /* 黄 */
.box-3, .box-4 { background-color: #b4f7b4; } /* 緑 */


.scroll-indicator {
    position: absolute;
    bottom: 50px;
    text-align: center;
    color: #555;
    z-index: 101; /* 箱の上に表示 */
    animation: bounce 1s infinite alternate; /* 矢印を上下に動かすアニメーション */
}

.scroll-indicator .arrow {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid #555;
    margin: 10px auto;
}

@keyframes bounce {
    from { transform: translateY(0); }
    to { transform: translateY(-10px); }
}


/* コンテンツ部分のスタイル */
.content-section {
    padding-top: 100vh; /* 箱が消えた後に表示されるように、初期位置を調整 */
    text-align: center;
    padding: 50px 20px;
    opacity: 0; /* 初期状態では非表示 */
    transition: opacity 1s ease-in; /* フェードインアニメーション */
}

.content-section.show {
    opacity: 1;
}

/* ページ最下部にスクロールバーが表示されるように、さらにスペースを追加 */
.object6::after {
    content: '';
    display: block;
}

.object5 {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    font-family: sans-serif;
    overflow: hidden; /* 画像がはみ出さないように */
    z-index: 998;
}

.animated-button {
    width: 200px;
    height: 60px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1.2em;
    cursor: pointer;
    position: relative; /* 子要素の配置基準に */
    overflow: hidden; /* はみ出した画像を隠す */
    transition: all 0.3s ease-in-out; /* 変形のアニメーション */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 997;
}

.animated-button:hover {
    width: 250px; /* ホバー時に幅を広げる */
    height: 80px; /* ホバー時に高さを広げる */
    border-radius: 10px; /* 角を丸くする */
    background-color: #0056b3; /* 背景色を変更 */
    transform: scale(1.1); /* 少し拡大する */
}

.button-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 1;
    transition: opacity 0.3s ease-in-out; /* テキストのフェードアウト */
    white-space: nowrap; /* テキストが折り返さないように */
}

.animated-button:hover .button-text {
    opacity: 0; /* ホバー時にテキストを非表示に */
}

.button-image {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0); /* 初期状態では非表示で縮小 */
    max-width: 90%; /* ボタン内に収まるように */
    max-height: 90%; /* ボタン内に収まるように */
    opacity: 0; /* 初期状態では非表示 */
    transition: all 0.3s ease-in-out; /* 画像のアニメーション */
}

.animated-button:hover .button-image {
    opacity: 1; /* ホバー時に画像を表示 */
    transform: translate(-50%, -50%) scale(1); /* 拡大して表示 */
}

.summon_container {
    display: flex;
    flex-direction: column; /* 要素を縦に並べる */
    align-items: center;
    gap: 50px; /* ボタンと外部画像の間のスペース */
}

/* --- 外部に表示される画像のスタイル --- */
.external-image-wrapper {
    width: 300px; /* 画像を囲むラッパーの幅 */
    height: 200px; /* 画像を囲むラッパーの高さ */
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box; /* paddingとborderを幅と高さに含める */

    opacity: 0; /* 初期状態では非表示 */
    transform: translateY(20px); /* 少し下に移動した状態で隠す */
    transition: opacity 0.4s ease-out, transform 0.4s ease-out; /* アニメーション */
}

.animated-button:hover + .external-image-wrapper {
    /* `+` は隣接セレクタ。animated-buttonのすぐ隣のexternal-image-wrapperに適用 */
    opacity: 1; /* ホバー時に表示 */
    transform: translateY(0); /* 元の位置に戻す */
}

.external-image {
    max-width: 100%; /* ラッパー内に収まるように */
    max-height: 100%; /* ラッパー内に収まるように */
    display: block; /* 画像の下に余白ができないように */
    object-fit: contain; /* 画像がラッパーに収まるように調整 */
}
